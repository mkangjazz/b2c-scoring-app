{"version":3,"sources":["js/utility.js","data/types/game.js","data/types/tokens.js","data/types/tiles.js","data/between-two-cities-setup.js","js/numTiles.js","js/nonHouseTypes.js","js/uniqueTaverns.js","js/housesNextToFactories.js","js/officesNextToTaverns.js","js/totalScoreParks.js","js/totalScoreOffices.js","js/totalScoreHouses.js","js/totalScoreShops.js","js/totalScoreTaverns.js","js/sortCitiesByFactoryCount.js","js/totalScoreFactories.js","js/calculateScore.js","components/BetweenTwoCities.js","components/CityGridSquare.js","components/Tile.js","components/TileSelect.js","components/City.js","components/CitySummary.js","App.js","index.js"],"names":["utility","convertNumberTo5x5Coordinates","number","o","x","convertNumberTo4x4Coordinates","getAdjacentTiles","tiles","tile","isOmniDirectional","direction","adjacentTiles","adjacentTileObj","n","find","obj","e","s","w","push","ne","nw","se","sw","filter","Boolean","getNameFromToken","token","replace","match","split","map","str","charAt","toUpperCase","slice","join","getTypeSpecial","specificToGenericToken","gameTypes","name","grid","id","tokens","tileTypes","betweenTwoCitiesSetup","gameTiles","gameTokens","game","cities","city","i","index","coordinates","y","numTiles","tileType","genericType","length","nonHouseTypes","typesFound","indexOf","uniqueTaverns","tavernTypesFound","groups","makeTavernSet","arr","splice","findTaverns","group","sort","housesNextToFactories","houseTiles","count","officesNextToTaverns","offices","totalScoreParks","groupScore","soloScore","parkGroups","parks","groupedParkGroups","soloParks","parkGroup","adjacentParks","j","removeGroupedParks","arrayA","arrayB","filteredArray","flatGrouping","reduce","accumulator","currentValue","concat","forEach","subArray","includes","some","v","solo","makeParkGroups","score","scoreGroupParks","totalScoreOffices","numOffices","addIncompleteGroupScore","Math","floor","Number","totalScoreHouses","numHouses","totalScoreShops","finalSolos","shops","finalGroups","snapshot","soloShops","horizontalGroups","verticalGroups","largestGroup","shouldLoop","removeCountedShopsFromSnapshot","updateSnapshotLargestGroup","compare","b","a","hasHorizontalGroups","hasVerticalGroups","sortHorizontalByLengthHighToLow","sortVerticalByLengthHighToLow","getLongestHorizontalGroup","getLongestVerticalGroup","getLargestShopGroup","updateSnapshotGroups","newSnapshot","type","getSoloShops","shopsThatTouchAShopHorizontally","doesTouch","eastAdjacentTile","westAdjacentTile","getShopsThatTouchAShopHorizontally","sortShopsIntoGroups","getHorizontalShops","shopsThatTouchAShopVertically","northAdjacentTile","southAdjacentTile","getShopsThatTouchAShopVertically","getVerticalShops","key","hasOwnProperty","scoreShopGroups","totalScoreTaverns","set","sortCitiesByFactoryCount","leaderBoard","String","firstHasThisManyFactories","secondHasThisManyFactories","sortFactoryCounts","firstPlaceArray","secondPlaceArray","totalScoreFactories","factoryMultiplier","numFactories","calculateScore","totalScore","BetweenTwoCities","props","className","renderCitySummaries","CityGridSquare","imgSrc","typeSpecial","onClick","showSelectTileModal","data-tile-type-special","data-tile-token","data-number","data-city","alt","src","Tile","chooseTile","tileToken","TileSelect","hideSelectTileModal","tileListItems","renderTiles","City","URLSearchParams","location","search","get","cityData","to","showCityTiles","handleShowCityTiles","handleShowCityScores","drawCityGrid","Fragment","rows","renderOfficesByTaverns","icons","renderNonHouseTypes","renderHouseFactoryAdjacencies","numParks","renderParkGroups","numShops","shopGroups","shopIcons","renderShopGroups","numTaverns","renderTavernIcons","isSelectTileModalVisible","CitySummary","pathname","App","state","tileToUpdate","bind","updateSetupData","this","setState","currentTarget","getAttribute","tileTypeSpecial","tileCityToken","tileNumber","targetTile","basename","exact","path","render","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3fa377fc.chunk.js","sourcesContent":["var utility = (function(){\n\tfunction convertNumberTo5x5Coordinates(number){\n\t\tvar o = {\n\t\t\tx: number%5\n\t\t};\n\n\t\tif(number < 5){\n\t\t\to[\"y\"] = 0;\n\t\t}\n\n\t\tif(number >= 5 && number < 10){\n\t\t\to[\"y\"] = 1;\n\t\t}\n\n\t\tif(number >= 10 && number < 15){\n\t\t\to[\"y\"] = 2;\n\t\t}\n\n\t\tif(number >= 15 && number < 20){\n\t\t\to[\"y\"] = 3;\n\t\t}\n\n\t\tif(number >= 20 && number < 25){\n\t\t\to[\"y\"] = 4;\n\t\t}\n\n\t\treturn o;\n\t}\n\n\tfunction convertNumberTo4x4Coordinates(number){\n\t\tvar o = {\n\t\t\tx: number%4\n\t\t};\n\n\t\tif(number < 4){\n\t\t\to[\"y\"] = 0;\n\t\t}\n\n\t\tif(number >= 4 && number < 8){\n\t\t\to[\"y\"] = 1;\n\t\t}\n\n\t\tif(number >= 8 && number < 12){\n\t\t\to[\"y\"] = 2;\n\t\t}\n\n\t\tif(number >= 12 && number < 16){\n\t\t\to[\"y\"] = 3;\n\t\t}\n\n\t\treturn o;\n\t}\n\n  function getTypeSpecial(token){\n    if(token){\n      return token.split(\"-\")[1];\n    }\n  }\n\n  function specificToGenericToken(token){\n    if(token){\n      return token.split(\"-\")[0];\n    }\n  }\n\n  function getNameFromToken(token){\n    var name;\n\n    if(token){\n      name = token.replace(/-/g, \" \");\n    \n      name = name.replace(/(st)|(mt)/g, function(match){\n        return match + \".\";\n      });\n    \n      name = name.split(\" \").map((str)=>{\n        return (str.charAt(0).toUpperCase() + str.slice(1));\n      }).join(\" \");\n    \n      return name;\n    }\n  }\n\n  function getAdjacentTiles(tiles, tile, isOmniDirectional, direction){\n    var adjacentTiles = [];\n    var adjacentTileObj = {};\n\n    adjacentTileObj.n = tiles.find(\n      obj => (obj[\"x\"] === tile[\"x\"] && obj[\"y\"] === tile[\"y\"] - 1)\n    );\n\n    adjacentTileObj.e = tiles.find(\n      obj => (obj[\"x\"] === tile[\"x\"]+1 && obj[\"y\"] === tile[\"y\"])\n    );\n\n    adjacentTileObj.s = tiles.find(\n      obj => (obj[\"x\"] === tile[\"x\"] && obj[\"y\"] === tile[\"y\"] + 1)\n    );\n\n    adjacentTileObj.w = tiles.find(\n      obj => (obj[\"x\"] === tile[\"x\"] - 1 && obj[\"y\"] === tile[\"y\"])\n    );\n\n    adjacentTiles.push(adjacentTileObj.n);\n    adjacentTiles.push(adjacentTileObj.e);\n    adjacentTiles.push(adjacentTileObj.s);\n    adjacentTiles.push(adjacentTileObj.w);\n\n    if(isOmniDirectional){\n      adjacentTileObj.ne = tiles.find(\n        obj => (obj[\"x\"] === tile[\"x\"] + 1 && obj[\"y\"] === tile[\"y\"] - 1)\n      );\n  \n      adjacentTileObj.nw = tiles.find(\n        obj => (obj[\"x\"] === tile[\"x\"] - 1 && obj[\"y\"] === tile[\"y\"] - 1)\n      );\n  \n      adjacentTileObj.se = tiles.find(\n        obj => (obj[\"x\"] === tile[\"x\"] + 1 && obj[\"y\"] === tile[\"y\"] + 1)\n      );\n  \n      adjacentTileObj.sw = tiles.find(\n        obj => (obj[\"x\"] === tile[\"x\"] - 1 && obj[\"y\"] === tile[\"y\"] + 1)\n      );\n\n      adjacentTiles.push(adjacentTileObj.ne);\n      adjacentTiles.push(adjacentTileObj.nw);\n      adjacentTiles.push(adjacentTileObj.se);\n      adjacentTiles.push(adjacentTileObj.sw);\n    }\n\n    if (direction) {\n      return adjacentTileObj[direction];\n    }\n    \n    adjacentTiles = adjacentTiles.filter(Boolean);\n\n    return adjacentTiles;\n  }\n\n  return {\n    convertNumberTo5x5Coordinates,\n    convertNumberTo4x4Coordinates,\n    getAdjacentTiles: getAdjacentTiles,\n    getNameFromToken: getNameFromToken,\n    getTypeSpecial: getTypeSpecial,\n    specificToGenericToken: specificToGenericToken,\n  }\n}());\n\nexport default utility;\n","const gameTypes = [\n\t{\n\t\tname: 'Original',\n\t\tgrid: 'four-by-four',\n\t\tid:'original',\n\t},\n\t{\n\t\tname: 'Essential Edition (Capitals)',\n\t\tgrid: 'five-by-five',\n\t\tid: 'capitals',\n\t},\n];\nexport default gameTypes;","const tokens = [\n\t'st-louis-arch',\n\t'taj-mahal',\n\t'colosseum',\n\t'golden-pavilion',\n\t'eiffel-tower',\n\t'pyramids',\n\t'sydney-harbour-bridge'\n];\nexport default tokens;\n","const tileTypes = [\n\t'factory',\n\t'house',\n\t'office',\n\t'park',\n\t'shop',\n\t'tavern-bed',\n\t'tavern-drink',\n\t'tavern-food',\n\t'tavern-music',\n];\nexport default tileTypes;\n","import utility from '../js/utility';\nimport gameTypes from './types/game';\nimport tokens from './types/tokens';\nimport tileTypes from './types/tiles';\n// import tokensCapitals from './types/tokens';\n// import tileTypesCapitals from './types/tiles_capitals';\n\nconst betweenTwoCitiesSetup = (function(){\n\tconst game = gameTypes[0];\n  let gameTiles;\n  let gameTokens;\n\n  if (game.id === 'original') {\n    gameTiles = tileTypes;\n\t  gameTokens = tokens;\n  }\n\n\tconst cities = gameTokens.map(token => {\n\t\tconst city = {};\n\t\t\n\t\tcity[\"token\"] = token;\n\t\tcity[\"name\"] = utility.getNameFromToken(token);\n\t\tcity[\"tiles\"] = [];\n\t\tcity[\"score\"] = {\n\t\t\t\"numParks\": 0,\n\t\t\t\"numHouses\": 0,\n\t\t\t\"numFactories\": 0,\n\t\t\t\"numOffices\": 0,\n\t\t\t\"numShops\": 0,\n\t\t\t\"numTaverns\": 0,\n\t\t\t\"nonHouseTypes\": [],\n\t\t\t\"uniqueTaverns\": [],\n\t\t\t\"parkGroups\": [],\n\t\t\t\"shopGroups\": [],\n\t\t\t\"factoryMultiplier\": 2,\n\t\t\t\"officesNextToTaverns\": 0,\n\t\t\t\"housesNextToFactories\": 0,\n\t\t\t\"totalScoreParks\": 0,\n\t\t\t\"totalScoreOffices\": 0,\n\t\t\t\"totalScoreHouses\": 0,\n\t\t\t\"totalScoreFactories\": 0,\n\t\t\t\"totalScoreShops\": 0,\n\t\t\t\"totalScoreTaverns\": 0,\n\t\t\t\"totalScore\": 0,\n\t\t};\n\n\t\tfor(var i = 0; i < 16; i++){\n\t\t\t(function(index){\n\t\t\t\tlet tile = {};\n        let coordinates;\n\t\t\t\t\n        if (game.id === 'original') {\n          coordinates = utility.convertNumberTo4x4Coordinates(index);  \n        }\n        \n        if (game.id === 'capitals') {\n          coordinates = utility.convertNumberTo5x5Coordinates(index);  \n        }\n\n\t\t\t\ttile[\"city\"] = token;\n\t\t\t\ttile[\"number\"] = index;\n\t\t\t\ttile[\"x\"] = coordinates.x;\n\t\t\t\ttile[\"y\"] = coordinates.y;\n\t\t\t\ttile[\"type\"] = null;\n\t\t\t\ttile[\"typeSpecial\"] = null;\n\n\t\t\t\tcity[\"tiles\"].push(tile);\n\t\t\t}(i));\n\t\t}\n\n\t\treturn city;\n\t});\n\n\treturn {\n    game: game,\n\t\tcities: cities,\n\t\ttileTypes: gameTiles,\n\t}\n}());\n\nexport default betweenTwoCitiesSetup;\n","import utility from './utility';\n\nfunction numTiles(tiles, tileType){\n  var genericType = utility.specificToGenericToken(tileType);\n  var filteredArray = tiles.filter(obj => obj[\"type\"] === genericType);\n\n  return (filteredArray.length);\n}\n\nexport default numTiles;","function nonHouseTypes(tiles){\n  var typesFound = [];\n\n  for (let i = 0; i < tiles.length; i++) {\n      if(\n        typesFound.indexOf(tiles[i][\"type\"]) === -1 &&\n        tiles[i][\"type\"] !== 'house' &&\n        tiles[i][\"type\"] !== '' &&\n        tiles[i][\"type\"] !== null &&\n        tiles[i][\"type\"] !== 'undefined'\n      ) {\n        typesFound.push(tiles[i][\"type\"]);\n      }\n  }\n\n  return typesFound;\n}\n\nexport default nonHouseTypes;\n","function uniqueTaverns(tiles){\n  var tavernTypesFound = [];\n  var groups = [];\n\n  function makeTavernSet() {\n    var arr = [];\n\n    for (let i = tavernTypesFound.length - 1; i >= 0; i--) {\n      if (arr.indexOf(tavernTypesFound[i]) === -1) {\n        arr.push(tavernTypesFound[i]);\n        tavernTypesFound.splice(i, 1);\n      }\n    }\n\n    groups.push(arr);\n  }\n\n  function findTaverns() {\n    for (let i = 0; i < tiles.length; i++) {\n      if (\n        (tiles[i][\"type\"] === 'tavern')\n      ){\n        tavernTypesFound.push(tiles[i][\"typeSpecial\"]);\n      }\n    }\n  }\n\n  findTaverns();\n\n  makeTavernSet();\n\n  do {\n    makeTavernSet();\n  } while (tavernTypesFound.length > 0);\n\n  groups.map(group => group.sort());\n\n  return groups;\n}\n\nexport default uniqueTaverns;\n","import utility from './utility';\n\nfunction housesNextToFactories(tiles){\n  var houseTiles = tiles.filter(obj => obj[\"type\"] === 'house');\n  var count = 0;\n  \n  for(let i = 0; i < houseTiles.length; i++) {\n      \n      var adjacentTiles = utility.getAdjacentTiles(tiles, houseTiles[i], true);\n      \n      if(adjacentTiles.length > 0){\n          var adjacentFactories = adjacentTiles.filter(obj => obj[\"type\"] === 'factory');\n          \n          if(adjacentFactories.length > 0){\n              count++;\n          }\n      }\n  }\n\n  return count;\n}\n\nexport default housesNextToFactories;\n","import utility from './utility';\n\nfunction officesNextToTaverns(tiles){\n    var offices = tiles.filter(obj => obj[\"type\"] === 'office');\n    var count = [];\n\n    for(let i = 0; i < offices.length; i++) {\n        var adjacentTiles = utility.getAdjacentTiles(tiles, offices[i], true);\n        \n        if(adjacentTiles.length > 0){\n            var adjacentFactories = adjacentTiles.filter(obj => obj[\"type\"] === 'tavern');\n            \n            if(adjacentFactories.length > 0){\n                count++;\n            }\n        }\n    }\n\n    return count;\n}\n\nexport default officesNextToTaverns;\n","import utility from './utility';\n\nfunction totalScoreParks(tiles){\n    var score = 0,\n        groupScore = 0,\n        soloScore = 0;\n\n    var parkGroups = makeParkGroups(tiles);\n\n    function makeParkGroups(tiles){\n        var parks = tiles.filter(obj => obj[\"type\"] === \"park\");\n        var parkGroups = [];\n        var groupedParkGroups = [];\n        var soloParks = [];\n        \n        for(let i = 0; i < parks.length; i++) {\n            var parkGroup = [];\n            var adjacentTiles = utility.getAdjacentTiles(tiles, parks[i], true);\n            var adjacentParks = adjacentTiles.filter(obj => obj[\"type\"] === 'park');\n\n            if(adjacentParks.length > 0){\n                parkGroup.push(parks[i].number);\n\n                for (let j = 0; j < adjacentParks.length; j++) {\n                    parkGroup.push(adjacentParks[j].number);\n                }\n\n                if(parkGroup.length > 0){\n                    parkGroups.push(parkGroup);\n                }                        \n            } else {\n                soloParks.push(parks[i].number);\n            }\n        }\n\n        function groupArray(arr){\n            var grouping;\n\n            function reducer(accumulator, currentValue){\n                if(accumulator.some(v => currentValue.indexOf(v) >= 0)){\n                    for(let i = 0; i < currentValue.length; i++){\n                        if(!(accumulator.includes(currentValue[i]))){\n                            accumulator.push(currentValue[i]);\n                        }\n                    }\n                }\n\n                return accumulator;\n            }\n\n            grouping = arr.reduce(reducer, arr[0]);\n\n            return grouping;\n        }\n\n        function removeGroupedParks(arrayA, arrayB){\n            var filteredArray = [];\n            var flatGrouping = arrayB.reduce(function(accumulator, currentValue) {\n                return accumulator.concat(currentValue);\n            }, []);\n\n            arrayA.forEach((subArray) => {\n                if(!flatGrouping.includes(subArray[0])){\n                    filteredArray.push(subArray);\n                } else {\n                }\n            });\n\n            return filteredArray;\n        }\n\n        while(parkGroups.length > 0){\n            groupedParkGroups.push(groupArray(parkGroups));\n            parkGroups = removeGroupedParks(parkGroups, groupedParkGroups);\n        }\n\n        return {\n            groups: groupedParkGroups,\n            solo: soloParks\n        }\n    }\n\n    function scoreSoloParks(arr){\n        var score = arr.length * 2;\n\n        return score;\n    }\n\n    function scoreGroupParks(arr){\n        var score = 0;\n\n        arr.forEach(function(group){\n            var groupScore = 0;\n\n            if(group.length > 3){\n                groupScore = 12 + (group.length - 3);\n            } else {\n                groupScore = group.length * 4;\n            }\n\n            score = score + groupScore;\n        });\n\n        return score;\n    }\n\n    soloScore = scoreSoloParks(parkGroups.solo);\n    groupScore = scoreGroupParks(parkGroups.groups);\n    score = soloScore + groupScore;\n\n    return {\n        score: score,\n        groups: parkGroups.groups\n    }\n}\n\nexport default totalScoreParks;","function totalScoreOffices(city){\n    var score = 0;\n    var count = city.score.numOffices;\n  \n    function addIncompleteGroupScore(group){\n        switch (group){\n            case 0:\n                break;\n            case 1:\n                score = score + 1;\n                break;\n            case 2:\n                score = score + 3;\n                break;\n            case 3:\n                score = score + 6;\n                break;\n            case 4:\n                score = score + 10;\n                break;\n            case 5:\n                score = score + 15;\n                break;\n            case 6:\n                score = score + 21;\n                break;\n            default:\n                break;\n        }\n    }\n\n    if(count > 6){\n        score = 21 * Math.floor(count / 6);\n        addIncompleteGroupScore(count % 6);\n    } else {\n        addIncompleteGroupScore(count);\n    }\n\n    score = Number(score + city.score.officesNextToTaverns);\n\n    return score;\n}\n\nexport default totalScoreOffices;","function totalScoreHouses(city){\n    var score = 0;\n\n    score = score + city.score.housesNextToFactories;\n    score = score + ((city.score.numHouses - city.score.housesNextToFactories) * city.score.nonHouseTypes.filter(x => x).length);\n\n    return score;\n}\n\nexport default totalScoreHouses;","import utility from './utility';\n\nfunction totalScoreShops(city) {\n    var score = 0;\n    var shops = city.tiles.filter(obj => obj[\"type\"] === \"shop\");\n    var finalGroups = [];\n    var finalSolos = [];\n    var snapshot = {\n        shops: shops,\n        soloShops: [],\n        horizontalGroups: [],\n        verticalGroups: [],\n        largestGroup: [],\n    };\n    var shouldLoop = true;\n\n    function removeCountedShopsFromSnapshot() {\n        if (snapshot.largestGroup.length < 1) {\n            return;\n        }\n\n        for (let i = snapshot.shops.length - 1; i >= 0; i--) {\n            if (snapshot.largestGroup.indexOf(snapshot.shops[i]) !== -1) {\n                snapshot.shops.splice(i, 1);\n            }\n        }\n    }\n\n    function updateFinalGroups() {\n        if (snapshot.largestGroup.length > 0) {\n            finalGroups.push(snapshot.largestGroup);\n        }\n    }\n\n    function updateSnapshotLargestGroup() {\n        function compare(b, a) {\n            return a.length - b.length;\n        }\n\n        function hasHorizontalGroups() {\n            return snapshot.horizontalGroups.length > 0 ? true : false;\n        }\n\n        function hasVerticalGroups() {\n            return snapshot.verticalGroups.length > 0 ? true : false;\n        }\n\n        function sortHorizontalByLengthHighToLow() {\n            snapshot.horizontalGroups.sort(compare);\n        }\n\n        function sortVerticalByLengthHighToLow() {\n            snapshot.verticalGroups.sort(compare);\n        }\n\n        function getLongestHorizontalGroup() {\n            sortHorizontalByLengthHighToLow();\n            return snapshot.horizontalGroups[0];\n        }\n\n        function getLongestVerticalGroup() {\n            sortVerticalByLengthHighToLow();\n            return snapshot.verticalGroups[0];\n        }\n\n        function getLargestShopGroup() {\n            if (!hasHorizontalGroups() && !hasVerticalGroups()) {\n                shouldLoop = false;\n\n                return [];\n            }\n\n            if (!hasHorizontalGroups()) {\n                return getLongestVerticalGroup();\n            }\n\n            if (!hasVerticalGroups()) {\n                return getLongestHorizontalGroup();\n            }\n\n            if (hasHorizontalGroups() && hasVerticalGroups()) {\n                sortHorizontalByLengthHighToLow();\n                sortVerticalByLengthHighToLow();\n\n                var arr = [getLongestHorizontalGroup(), getLongestVerticalGroup()];\n                arr.sort(compare);\n\n                return arr[0];\n            }\n        }\n\n        snapshot.largestGroup = getLargestShopGroup();\n    }\n\n    function updateSnapshotGroups() {\n        function getSoloShops() {\n            const arr = [];\n\n            for (let i = 0; i < snapshot.shops.length; i++) {\n                const adjacentTiles = utility.getAdjacentTiles(city.tiles, snapshot.shops[i], false);\n                const adjacentShops = adjacentTiles.filter(obj => obj.type === 'shop');\n\n                if (adjacentShops.length === 0) {\n                    arr.push(snapshot.shops[i]);\n                }\n            }\n\n            return arr;\n        }\n\n        function getHorizontalShops() {\n            const arr = [];\n            const shopsThatTouchAShopHorizontally = [];\n\n            function getShopsThatTouchAShopHorizontally() {\n                for (let i = 0; i < snapshot.shops.length; i++) {\n                    let doesTouch = false;\n\n                    const eastAdjacentTile = utility.getAdjacentTiles(city.tiles, snapshot.shops[i], false, 'e');\n                    const westAdjacentTile = utility.getAdjacentTiles(city.tiles, snapshot.shops[i], false, 'w');\n\n                    if (eastAdjacentTile) {\n                        if (\n                            eastAdjacentTile.type === 'shop' &&\n                            snapshot.shops.indexOf(eastAdjacentTile) !== -1\n                        ) {\n                            doesTouch = true;\n                        }\n                    }\n    \n                    if (westAdjacentTile) {\n                        if (\n                            westAdjacentTile.type === 'shop' &&\n                            snapshot.shops.indexOf(westAdjacentTile) !== -1\n                        ) {\n                            doesTouch = true;\n                        }\n                    }\n                \n                    if (doesTouch) {\n                        shopsThatTouchAShopHorizontally.push(snapshot.shops[i]);\n                    }\n                }\n            }\n\n            function sortShopsIntoGroups() {                   \n                for (let i = 0; i < 4; i++) {\n                    const group = shopsThatTouchAShopHorizontally.filter(obj => obj.y === i);\n\n                    if (group.length > 1) {\n                        arr.push(group);\n                    }\n                }\n            }\n\n            getShopsThatTouchAShopHorizontally();\n            sortShopsIntoGroups();\n\n            return arr;\n        }\n        \n        function getVerticalShops() {\n            const arr = [];\n            const shopsThatTouchAShopVertically = [];\n\n            function getShopsThatTouchAShopVertically() {\n                for (let i = 0; i < snapshot.shops.length; i++) {\n                    let doesTouch = false;\n\n                    const northAdjacentTile = utility.getAdjacentTiles(city.tiles, snapshot.shops[i], false, 'n');\n                    const southAdjacentTile = utility.getAdjacentTiles(city.tiles, snapshot.shops[i], false, 's');\n\n                    if (northAdjacentTile) {\n                        if (\n                            northAdjacentTile.type === 'shop' &&\n                            snapshot.shops.indexOf(northAdjacentTile) !== -1\n                        ) {\n                            doesTouch = true;\n                        }\n                    }\n    \n                    if (southAdjacentTile) {\n                        if (\n                            southAdjacentTile.type === 'shop' &&\n                            snapshot.shops.indexOf(southAdjacentTile) !== -1\n                        ) {\n                            doesTouch = true;\n                        }\n                    }\n                \n                    if (doesTouch) {\n                        shopsThatTouchAShopVertically.push(snapshot.shops[i]);\n                    }\n                }\n            }\n\n            function sortShopsIntoGroups() {\n                for (let i = 0; i < 4; i++) {\n                    const group = shopsThatTouchAShopVertically.filter(obj => obj.x === i);\n\n                    if (group.length > 1) {\n                        arr.push(group);\n                    }\n                }\n            }\n\n            getShopsThatTouchAShopVertically();\n            sortShopsIntoGroups();\n\n            return arr;\n        }\n\n        var newSnapshot = {\n            soloShops: getSoloShops(),\n            horizontalGroups: getHorizontalShops(),\n            verticalGroups: getVerticalShops(),\n        };\n\n        for (var key in newSnapshot) {\n            if (newSnapshot.hasOwnProperty(key)) {\n                snapshot[key] = newSnapshot[key];\n            }\n        }\n    }\n\n    do {\n        updateSnapshotGroups();\n        updateSnapshotLargestGroup();\n        updateFinalGroups();\n        removeCountedShopsFromSnapshot();\n    } while (shouldLoop);\n\n    finalSolos = snapshot.shops;\n\n    function scoreShopGroups() {\n        var score = 0;\n\n        for (let i = 0; i < finalGroups.length; i++) {\n            switch (finalGroups[i].length) {\n                case 2:\n                    score += 5;\n                    break;\n                case 3:\n                    score += 10;\n                    break;\n                case 4:\n                    score += 16;\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return score;\n    }\n\n    function scoreSoloShops() {\n        var score = finalSolos.length * 2;\n\n        return score;\n    }\n\n    score += scoreShopGroups();\n    score += scoreSoloShops();\n\n    return {\n        score: score,\n        groups: finalGroups,\n    }\n}\n\nexport default totalScoreShops;","function totalScoreTaverns(city) {\n  let score = 0;\n\n  const tavernSets = city[\"score\"][\"uniqueTaverns\"];\n\n  tavernSets.map(set => {\n    switch (set.length) {\n      case 4:\n        score += 17;\n        break;\n      case 3:\n        score += 9;\n        break;\n      case 2:\n        score += 4;\n        break;\n      case 1:\n        score += 1;\n        break;\n      default:\n        break;\n    }\n\n    return false;\n  });\n\n  return score;\n}\n\nexport default totalScoreTaverns;\n","function sortCitiesByFactoryCount(cities) {\n    var leaderBoard = {};\n\n    cities.map(city => {\n        const score = String(city[\"score\"][\"numFactories\"]);\n\n        if (\n            !leaderBoard.hasOwnProperty(score) &&\n            score !== '0'\n        ) {\n            leaderBoard[score] = [];\n        }\n\n        if (score !== '0') {\n            leaderBoard[score].push(city.token);\n        }\n\n        return false;\n    });\n\n    function sortFactoryCounts() {\n        var arr = [];\n\n        for (var key in leaderBoard) {\n            if (leaderBoard.hasOwnProperty(key)) {\n                arr.push(key);\n            }\n        }\n\n        arr.sort((b, a) => {\n            return a - b;\n        });\n\n        leaderBoard.firstHasThisManyFactories = arr[0];\n        leaderBoard.secondHasThisManyFactories = arr[1];\n\n        return;\n    }\n\n    sortFactoryCounts();\n\n    cities.map(city => {\n        const firstPlaceArray = leaderBoard[leaderBoard.firstHasThisManyFactories];\n        const secondPlaceArray = leaderBoard[leaderBoard.secondHasThisManyFactories];\n\n        // default case\n        city[\"score\"][\"factoryMultiplier\"] = 2;\n        city[\"score\"][\"factoryBonus\"] = '';\n\n        if (firstPlaceArray) {\n            if (firstPlaceArray.indexOf(city.token) !== -1) {\n                city[\"score\"][\"factoryMultiplier\"] = 4;\n                city[\"score\"][\"factoryBonus\"] = 'Most Factories';\n            }\n        }\n\n        if (secondPlaceArray) {\n            if (secondPlaceArray.indexOf(city.token) !== -1) {\n                city[\"score\"][\"factoryMultiplier\"] = 3;\n                city[\"score\"][\"factoryBonus\"] = 'Second Most Factories';\n            }\n        }\n\n        return false;\n    });\n}\n\nexport default sortCitiesByFactoryCount;","function totalScoreFactories(city) {\n    var score = 0;\n    var multiplier = city.score.factoryMultiplier;\n    var factories = city.score.numFactories;\n\n    score = multiplier * factories;\n\n    return {\n        score: score,\n    }\n}\n\nexport default totalScoreFactories;","import numTiles from './numTiles';\nimport nonHouseTypes from './nonHouseTypes';\nimport uniqueTaverns from './uniqueTaverns';\nimport housesNextToFactories from './housesNextToFactories';\nimport officesNextToTaverns from './officesNextToTaverns';\nimport totalScoreParks from './totalScoreParks';\nimport totalScoreOffices from './totalScoreOffices';\nimport totalScoreHouses from './totalScoreHouses';\nimport totalScoreShops from './totalScoreShops';\nimport totalScoreTaverns from './totalScoreTaverns';\nimport sortCitiesByFactoryCount from './sortCitiesByFactoryCount';\nimport totalScoreFactories from './totalScoreFactories';\n\nvar calculateScore = function(cities) {\n    function setCounts(){\n        cities.map(city => {\n            city[\"score\"][\"numParks\"] = numTiles(city.tiles, \"park\");\n            city[\"score\"][\"numHouses\"] = numTiles(city.tiles, \"house\");\n            city[\"score\"][\"numFactories\"] = numTiles(city.tiles, \"factory\");\n            city[\"score\"][\"numOffices\"] = numTiles(city.tiles, \"office\");\n            city[\"score\"][\"numShops\"] = numTiles(city.tiles, \"shop\");\n            city[\"score\"][\"numTaverns\"] = numTiles(city.tiles, \"tavern\");\n            city[\"score\"][\"nonHouseTypes\"] = nonHouseTypes(city.tiles);\n            city[\"score\"][\"uniqueTaverns\"] = uniqueTaverns(city.tiles);\n            city[\"score\"][\"housesNextToFactories\"] = housesNextToFactories(city.tiles);\n            city[\"score\"][\"officesNextToTaverns\"] = officesNextToTaverns(city.tiles);\n\n            return false;\n        });\n    }\n\n    function setTotals(){\n        cities.map(city => {\n            city[\"score\"][\"parkGroups\"] = totalScoreParks(city.tiles).groups;\n            city[\"score\"][\"totalScoreParks\"] = totalScoreParks(city.tiles).score;\n            city[\"score\"][\"totalScoreOffices\"] = totalScoreOffices(city);\n            city[\"score\"][\"totalScoreHouses\"] = totalScoreHouses(city);\n            city[\"score\"][\"totalScoreFactories\"] = totalScoreFactories(city).score;\n            city[\"score\"][\"totalScoreShops\"] = totalScoreShops(city).score;\n            city[\"score\"][\"shopGroups\"] = totalScoreShops(city).groups;\n            city[\"score\"][\"totalScoreTaverns\"] = totalScoreTaverns(city);\n\n            return false;\n        });\n    }\n\n    function totalScore(city){\n        var score = 0;\n\n        var scores = [\n            city[\"score\"][\"totalScoreParks\"],\n            city[\"score\"][\"totalScoreOffices\"],\n            city[\"score\"][\"totalScoreHouses\"],\n            city[\"score\"][\"totalScoreFactories\"],\n            city[\"score\"][\"totalScoreShops\"],\n            city[\"score\"][\"totalScoreTaverns\"],\n        ];\n\n        score = scores.reduce((a, b) => a + b, 0);\n\n        return score;\n    }\n\n    function setTotal(){\n        cities.map(city => {\n            city[\"score\"][\"totalScore\"] = totalScore(city);\n\n            return false;\n        });\n    }\n\n    setCounts();\n    sortCitiesByFactoryCount(cities);\n    setTotals();\n    setTotal();\n};\n\nexport default calculateScore;\n","import React from 'react';\n\nfunction BetweenTwoCities(props){\n\treturn (\n\t\t<div>\n\t\t\t<h1 className='game-title text-center'>\n        \t\t{props.game.name}\n\t\t\t</h1>\n\t\t\t<ul className=\"list-panel list-cities\">\n\t\t\t\t{props.renderCitySummaries(props.cities)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default BetweenTwoCities;\n","import React from 'react';\nimport utility from '../js/utility';\n\nfunction CityGridSquare(props) {\n\tlet imgSrc = '';\n\t\n\tif (props.type) {\n\t\timgSrc += props.type;\n\t}\n\n\tif (props.typeSpecial) {\n\t\timgSrc += `-${props.typeSpecial}`;\n\t}\n\n\treturn (\n\t\t<li>\n\t\t\t<button \n\t\t\t\tclassName={props.type}\n\t\t\t\tonClick={(e) => props.showSelectTileModal(e)}\n\t\t\t\ttype=\"button\" \n\t\t\t\tdata-tile-type-special={props.typeSpecial} \n\t\t\t\tdata-tile-token={props.type}\n\t\t\t\tdata-number={props.number} data-city={props.city}\n\t\t\t>\n\t\t\t\t{imgSrc !== '' ? <img alt={`icon`} className=\"image-tile-icon\" src={`/img/icon-${imgSrc}-white.png`} /> : ''}\n\n\t\t\t\t{props.type ? <span>{utility.getNameFromToken(props.type)}</span> : \"—\"} {props.typeSpecial ? `${utility.getNameFromToken(props.typeSpecial)}` : \"\" }\n\t\t\t</button>\n\t\t</li>\n\t);\n}\n\nexport default CityGridSquare;\n","import React from 'react';\nimport utility from '../js/utility';\n\nfunction Tile(props){\n\treturn (\n\t\t<li>\n\t\t\t<button\n\t\t\t\tonClick={(e) => props.chooseTile(e)}\n\t\t\t\tdata-tile-type-special={utility.getTypeSpecial(props.tileToken)}\n\t\t\t\tdata-tile-token={utility.specificToGenericToken(props.tileToken)}\n\t\t\t\ttype=\"button\"\n\t\t\t>\n\t\t\t\t<img alt={`${props.tileToken} icon`} className=\"image-tile-icon\" src={`/img/tile-${props.tileToken}.gif`} />\n\t\t\t\t{utility.getNameFromToken(props.tileToken)}\n\t\t\t</button>\n\t\t</li>\n\t);\n}\n\nexport default Tile;\n","import React from 'react';\nimport Tile from './Tile';\n\nfunction TileSelect(props){\n\tfunction renderTiles(tiles){\n\t\tvar tileListItems = tiles.map((tile, index)=>{\n\t\t\treturn <Tile chooseTile={props.chooseTile} tileToken={tile} key={`${tile}-${index}`} />\n\t\t});\n\t\treturn (\n\t\t\t<ul className='list-panel list-tiles'>\n\t\t\t\t{tileListItems}\n\t\t\t</ul>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"modal-wrapper\">\n\t\t\t<div className=\"modal\">\n\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t<button onClick={(e) => props.hideSelectTileModal(e)} className='close-modal' type='button'>Close</button>\n          <h1 className='modal-title'>\n\t\t\t\t\t\t\tChoose Tile\n          </h1>\n\t\t\t\t\t{renderTiles(props.tiles)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default TileSelect;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport CityGridSquare from \"./CityGridSquare\";\nimport TileSelect from \"./TileSelect\";\n\nfunction City(props) {\n\tvar urlParams = new URLSearchParams(props.location.search);\n\n  var token = urlParams.get('token');\n\tvar cityData = (props.cities.filter(obj => obj[\"token\"] === token))[0];\n\n\tfunction drawCityGrid(tiles){\n\t\tvar grid = tiles.map((tile, index) => {\n\t\t\treturn <CityGridSquare type={tile.type} typeSpecial={tile.typeSpecial} showSelectTileModal={props.showSelectTileModal} number={index} city={token} key={index} />\n\t\t});\n\n\t\treturn (\n\t\t\t<ol className={`city-grid ${props.game.grid}`}>\n\t\t\t\t{grid}\n\t\t\t</ol>\n\t\t);\n\t}\n\n\tfunction renderNonHouseTypes(nonHouseTypes) {\n\t\tconst icons = nonHouseTypes.map((type, index) =>\n\t\t\t<div key={`group-${index}`} className=\"css-icon-container noborder\">\n\t\t\t\t<span className={`${type}`}></span>\n\t\t\t</div>\n\t\t);\n\t\treturn (\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{icons}\n              <span className=\"city-score-modifier\">\n                {`x${nonHouseTypes.length} per`}\n              </span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\n\tfunction renderHouseFactoryAdjacencies(housesNextToFactories) {\n    const rows = [];\n    for (let i = 0; i < housesNextToFactories; i += 1) {\n      rows.push(\n        <tr key={`row-${i}`}>\n          <td>\n            <div className=\"css-icon-container\">\n              <span className='house'></span>\n            </div>\n            <div className=\"css-icon-container\">\n              <span className='factory'></span>\n            </div>\n            <span className=\"city-score-modifier\">\n              {`x1 per`}\n            </span>\n            &nbsp;\n          </td>\n        </tr>\n      );\n    }\n\t\treturn (\n\t\t\t<table>\n\t\t\t\t<tbody>\n          {rows}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\tfunction renderOfficesByTaverns(offices) {\n    const rows = [];\n    for (let i = 0; i < offices; i += 1) {\n      rows.push(\n        <tr>\n          <td>\n            <div className=\"css-icon-container\">\n              <span className=\"office\"></span>\n            </div>\n            <div className=\"css-icon-container\">\n              <span className=\"tavern\"></span>\n            </div>\n            <span className=\"city-score-modifier\">+1</span>\n          </td>\n        </tr>\n      );\n    }\n\t\treturn (\n\t\t\t<table>\n\t\t\t\t<tbody>\n          { rows }\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\n\tfunction renderParkGroups(groups) {\n\t\tconst rows = groups.map((group, index) => {\n      const icons = [];\n      for (let i = 0; i < group.length; i += 1) {\n        icons.push(\n          <div key={`group-${index}-park-icon-${i}`} className=\"css-icon-container\">\n            <span className=\"park\"></span>\n          </div>\n        );\n      }\n      return (\n        <tr key={`group-${index}`}>\n          <td>\n            { icons }\n            {group.length === 2 ? <span className=\"city-score-modifier\">+8</span> : null }\n            {group.length === 3 ? <span className=\"city-score-modifier\">+12</span> : null }\n            {group.length > 3 ? <span className=\"city-score-modifier\">{`+${String(12 + group.length - 3)}`}</span> : null }\n          </td>\n        </tr>\n      );\n    });\n\t\treturn (\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{rows}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\n\tfunction renderTavernIcons(groups) {\n\t\tconst icons = groups.map((group, index) =>\n      { return group.length > 0\n        ? <tr key={`group-${index}`}>\n            <td className=\"tavern-icon-score-group\">\n              {group.map((str,index) => (\n                <div key={`img-${str}-${index}`} className=\"image-special-tavern-icon\">\n                  <img\n                    alt={`${str} icon`}\n                    key={`${str}-${index}`}\n                    src={`/img/icon-tavern-${str}.png`}\n                  />\n                </div>\n              ))}\n              <span className=\"city-score-modifier\">\n                {group.length === 1 ? '+1' : ''}\n                {group.length === 2 ? '+4' : ''}\n                {group.length === 3 ? '+9' : ''}\n                {group.length === 4 ? '+17' : ''}\n              </span>\n            </td>\n          </tr> \n        : null \n      }\n\t\t);\n\n\t\treturn (\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{icons}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\n\tfunction renderShopGroups(arr){\n\t\tvar rows = arr.map((group, index) => {\n      const shopIcons = [];\n      for (let i = 0; i < group.length; i += 1) {\n        shopIcons.push(\n          <div \n            className=\"css-icon-container\"\n            key={`shop-{i}`}\n          >\n            <span className=\"shop\"></span>\n          </div>\n        );\n      }\n\t\t\treturn (\n\t\t\t\t<tr key={`${group}-${index}`}>\n\t\t\t\t\t<td>\n            { shopIcons }\n            {group.length === 2 ? <span className=\"city-score-modifier\">+5</span> : null }\n            {group.length === 3 ? <span className=\"city-score-modifier\">+10</span> : null }\n            {group.length === 4 ? <span className=\"city-score-modifier\">+16</span> : null }\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{rows}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\n\tfunction drawScores(score){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<table className=\"city-score-table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th className=\"city-score-table-number\">#</th>\n\t\t\t\t\t\t\t<th>Tile</th>\n\t\t\t\t\t\t\t<th>Sets and Modifiers</th>\n\t\t\t\t\t\t\t<th className=\"city-score-table-number\">Total</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n             \t<td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.numFactories}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='city-score-legend'\n\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<img alt=\"Factory icon\" className=\"image-tile-icon\" src='img/tile-factory.gif' />\n\t\t\t\t\t\t\t\t\t<span>Factory</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr>\n                      <td>\n                        {score.factoryMultiplier === 4 \n                          ? <React.Fragment>\n                              <img className='image-medal-icon' alt='Gold medal' src='img/icon-gold.gif' /> Most\n                          </React.Fragment>\n                          : null\n                        }\n                        {score.factoryMultiplier === 3 \n                          ? <React.Fragment>\n                              <img className='image-medal-icon' alt='Silver medal' src='img/icon-silver.gif' /> Second-Most\n                          </React.Fragment>\n                          : null\n                        }\n                        {score.factoryMultiplier > 2 ? <span className='city-score-modifier'>x{score.factoryMultiplier} per</span>: null}\n                      </td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.totalScoreFactories}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n              <td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.numOffices}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n                <button\n                  className='city-score-legend'\n                  type='button'\n                >\n                  <img alt=\"Office icon\" className=\"image-tile-icon\" src='img/tile-office.gif' />\n                  <span>Office</span>\n                </button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{score.officesNextToTaverns > 0 ? renderOfficesByTaverns(score.officesNextToTaverns) : \"\"}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.totalScoreOffices}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n              <td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.numHouses}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n                <button\n                  className='city-score-legend'\n                  type='button'\n                >\n                  <img alt=\"House icon\" className=\"image-tile-icon\" src='img/tile-house.gif' />\n                  <span>House</span>\n                </button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{score.nonHouseTypes.length > 0 ? renderNonHouseTypes(score.nonHouseTypes) : \"\"}\n\t\t\t\t\t\t\t\t{score.housesNextToFactories > 0 ? renderHouseFactoryAdjacencies(score.housesNextToFactories) : \"\"}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.totalScoreHouses}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n              <td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.numParks}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n                <button\n                  className='city-score-legend'\n                  type='button'\n                >\n                  <img alt=\"Park icon\" className=\"image-tile-icon\" src='img/tile-park.gif' />\n                  <span>Park</span>\n                </button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{score.numParks > 0 ? renderParkGroups(score.parkGroups) : \"\" }\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.totalScoreParks}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n              <td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.numShops}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n                <button\n                  className='city-score-legend'\n                  type='button'\n                >\n                  <img alt=\"Shop icon\" className=\"image-tile-icon\" src='img/tile-shop.gif' />\n                  <span>Shop</span>\n                </button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{score.shopGroups.length > 0 ? renderShopGroups(score.shopGroups) : \"\" }\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.totalScoreShops}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n              <td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.numTaverns}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n                <button\n                  className='city-score-legend'\n                  type='button'\n                >\n                  <img alt=\"Tavern icon\" className=\"image-tile-icon\" src='img/tile-tavern-drink.gif' />\n                  <span>Tavern</span>\n                </button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t{renderTavernIcons(score.uniqueTaverns)}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"city-score-table-number\">\n\t\t\t\t\t\t\t\t{score.totalScoreTaverns}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table> \n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div>\n      <Link\n        to=\"/\"\n        className=\"link-back\"\n      >\n        Back\n      </Link>\n\n      <h1 className='city-heading'>\n        <img\n          alt={`${cityData.token} icon`}\n          className=\"image-city-token\"\n          src={`/img/token-${cityData.token}.gif`}\n        />\n\n        {cityData.name}\n\n        <span className='city-score'>\n          {cityData.score.totalScore}\n        </span>\n      </h1>\n\n      <div className='city-buttons'>\n        <button\n          className={props.showCityTiles ? 'active' : null}\n          onClick={props.handleShowCityTiles}\n          type='button'\n        >\n          Tiles\n        </button>\n        <button\n          className={props.showCityTiles ? null: 'active'}\n          onClick={props.handleShowCityScores}\n          type='button'\n        >\n          Scores\n        </button>\n      </div>\n\n      {props.showCityTiles\n        ? drawCityGrid(cityData.tiles)\n        : drawScores(cityData.score)\n      }\n\n\t\t\t{props.isSelectTileModalVisible === false ? null :\n\t\t\t\t<TileSelect\n\t\t\t\t\thideSelectTileModal={props.hideSelectTileModal}\n\t\t\t\t\tchooseTile={props.chooseTile}\n\t\t\t\t\ttiles={props.tiles} />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default City;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction CitySummary(props){\n\treturn (\n\t\t<li>\n\t\t\t<Link to={{pathname: \"/city\", search: `?token=${props.token}`}}>\n\t\t\t\t<img alt={`${props.token} icon`} className=\"image-city-token\" src={`/img/token-${props.token}.gif`} />\n\t\t\t\t<h3>\n\t\t\t\t\t{props.name}\n\t\t\t\t</h3>\n\t\t\t\t<span className=\"total-score\">{props.score.totalScore > 0 ? props.score.totalScore : 0}</span>\n\t\t\t</Link>\n\t\t</li>\n\t);\n}\n\nexport default CitySummary;\n","import './css/App.css';\nimport './css/city-buttons.css';\nimport './css/city-grid.css';\nimport './css/city-heading.css';\nimport './css/city-score-table.css';\nimport './css/css-icons.css';\nimport './css/footer.css';\nimport './css/header.css';\nimport './css/images.css';\nimport './css/list-panel.css';\nimport './css/link-back.css';\nimport './css/modal.css';\nimport './css/social-links.css';\nimport './css/scoring-guide.css';\nimport './css/typography.css';\n\nimport React, {Component} from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport betweenTwoCitiesSetup from \"./data/between-two-cities-setup\";\nimport calculateScore from \"./js/calculateScore\";\nimport BetweenTwoCities from \"./components/BetweenTwoCities\";\nimport City from \"./components/City\";\nimport CitySummary from \"./components/CitySummary\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cities: betweenTwoCitiesSetup.cities,\n      tiles: betweenTwoCitiesSetup.tileTypes,\n      game: betweenTwoCitiesSetup.game,\n      isSelectTileModalVisible: false,\n      showCityTiles: true,\n      tileToUpdate: null,\n    };\n\n    this.renderCitySummaries = this.renderCitySummaries.bind(this);\n    this.showSelectTileModal = this.showSelectTileModal.bind(this);\n    this.hideSelectTileModal = this.hideSelectTileModal.bind(this);\n    this.chooseTile = this.chooseTile.bind(this);\n    this.updateSetupData = this.updateSetupData.bind(this);\n    this.handleShowCityTiles = this.handleShowCityTiles.bind(this);\n    this.handleShowCityScores = this.handleShowCityScores.bind(this);\n  }\n\n  handleShowCityTiles(){\n    this.setState({\n      showCityTiles: true,\n    });\n  }\n\n  handleShowCityScores(){\n    this.setState({\n      showCityTiles: false,\n    });\n  }\n\n  showSelectTileModal(e){\n    var number = e.currentTarget.getAttribute(\"data-number\");\n    var city = e.currentTarget.getAttribute(\"data-city\");\n\n    this.setState({\n      tileToUpdate: {\n        city: city,\n        number: number,\n      },\n      isSelectTileModalVisible: true\n    });\n  }\n\n  hideSelectTileModal(){\n    this.setState({\n      tileToUpdate: null,\n      isSelectTileModalVisible: false\n    });\n  }\n\n  chooseTile(e){\n    var tileType = e.currentTarget.getAttribute(\"data-tile-token\");\n    var tileTypeSpecial = e.currentTarget.getAttribute(\"data-tile-type-special\");\n    var tileCityToken = this.state.tileToUpdate.city;\n    var tileNumber = this.state.tileToUpdate.number;\n\n    this.updateSetupData(tileType, tileTypeSpecial, tileCityToken, tileNumber);\n  }\n\n  updateSetupData(tileType, tileTypeSpecial, tileCityToken, tileNumber){\n    var targetCity = betweenTwoCitiesSetup.cities.filter(obj => obj[\"token\"] === tileCityToken);\n    var targetTile = targetCity[0].tiles[tileNumber];\n\n    targetTile[\"type\"] = tileType;\n    targetTile[\"typeSpecial\"] = tileTypeSpecial;\n\n    calculateScore(betweenTwoCitiesSetup.cities);\n\n    this.setState({\n      cities: betweenTwoCitiesSetup.cities,\n      isSelectTileModalVisible: false,\n      tileToUpdate: null,\n    });\n  }\n\n  renderCitySummaries(cities){\n    var cityListItems = cities.map((city)=>{\n      return <CitySummary score={city.score} token={city.token} name={city.name} key={city.token} />\n    });\n\n    return cityListItems;\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Router basename='/'>\n            <Route\n              exact path=\"/\"\n              render={props=>\n                <BetweenTwoCities\n                  game={this.state.game}\n                  cities={this.state.cities}\n                  renderCitySummaries={this.renderCitySummaries}\n                  {...props}\n                />\n              }\n            />\n            <Route\n              path=\"/city\"\n              render={props =>\n                <City\n                  game={this.state.game}\n                  tiles={this.state.tiles}\n                  isSelectTileModalVisible={this.state.isSelectTileModalVisible}\n                  cities={this.state.cities}\n                  showCityTiles={this.state.showCityTiles}\n                  chooseTile={this.chooseTile}\n                  handleShowCityScores={this.handleShowCityScores}\n                  handleShowCityTiles={this.handleShowCityTiles}\n                  showSelectTileModal={this.showSelectTileModal}\n                  hideSelectTileModal={this.hideSelectTileModal}\n                  {...props}\n                />\n              }\n            />\n        </Router>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}